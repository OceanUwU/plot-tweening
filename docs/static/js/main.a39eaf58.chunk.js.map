{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Lobby/ColorPicker.js","Home/PresetMenu.js","Home/showMatchOptions.js","Rules/sections/Options.js","Rules/sections/Premise.js","Rules/sections/index.js","Rules/DialogCentre.js","Rules/RulesDialog.js","Rules/index.js","Home/index.js","Lobby/index.js","Lobby/ComeBackMenu.js","Match/index.js","Presentation/index.js","socket/index.js","Match/gameplay.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","closeText","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","layer","element","document","getElementById","createElement","appendChild","ReactDOM","render","ThemeProvider","CssBaseline","ref","dialog","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","colorButton","ColorPicker","selected","setSelected","taken","setTaken","useEffect","matchInfo","showTaken","console","log","players","map","p","num","on","off","ButtonGroup","orientation","buttonGroups","i","push","buttons","k","Tooltip","playerColours","style","backgroundImage","opacity","includes","stcolor","String","rows","copyHelp","saveHelp","list","height","overflowY","actions","flex","PresetMenu","hasOwnProperty","stpresets","JSON","stringify","defaultPresets","enteredPresetCode","setEnteredPresetCode","stpreset","parse","items","setItems","copyTitle","setCopyTitle","saveTitle","setSaveTitle","loadPresets","find","List","dragHandleSelector","lockAxis","onDrop","removedIndex","addedIndex","arrayMove","ListItem","button","ListItemText","presets","Math","random","options","defaultValue","disabled","editable","showMatchOptions","preset","copy","btoa","filter","Divider","flexDirection","helperText","atob","alert","allowedPlayers","formControl","select","smallSelect","optionsToLoad","defaultMatchOptions","Array","isArray","MatchOptions","NumberTweaker","bigChange","fn","min","max","sendUpdate","started","public","publicity","setPublicity","setPlayers","updateOptions","addEventListener","removeEventListener","FormLabel","Typography","component","Switch","checked","change","ingame","changeOptions","newOptions","dispatchEvent","Event","hostChanged","amNowHost","card","Premise","videoID","src","maxWidth","Link","href","rel","frameBorder","allow","allowFullScreen","Options","TabPanel","index","other","role","hidden","Box","root","flexGrow","backgroundColor","paper","tabs","minWidth","borderRight","divider","tab","tabPanel","DialogCentre","setValue","Tabs","newValue","Tab","sections","centre","RulesDialog","setOpen","exp","openRules","ShowRulesIcon","HelpIcon","showRules","ShowRulesButton","logoImage","controls","Home","gutterBottom","alt","rules","fontSize","Number","floor","privacyIcon","table","player","justifyContent","pfp","head","tableCell","you","textDecoration","Lobby","tableBody","amHost","startsWith","host","content","TableRow","TableCell","starting","bot","Audio","startTimer","play","LC","init","imageURLPrefix","protocol","TableContainer","Paper","Table","TableHead","TableBody","align","ComeBackMenu","choices","choice","gameInfo","top","borderBottom","zIndex","gameInfoTitle","gameInfoContent","do","literallyCanvas","image","playingStatusContainer","flexWrap","paddingLeft","getImg","rej","paperCanvas","canvasForExport","canvas","ctx","getContext","fillStyle","fillRect","getElementsByClassName","img","Image","onload","drawImage","toDataURL","Match","myId","drawingNum","setDrawingNum","finished","playingStatus","setPlayingStatus","setCanvas","drawInfo","setDrawInfo","resetCanvas","tools","Pencil","Eraser","Line","Rectangle","Ellipse","Polygon","Pan","Eyedropper","newPlayingStatus","info","dead","plot","overflowAnchor","plotPoint","maxHeight","Presentation","presenting","setPresenting","presentingImage","drawing","setDrawing","plotDiv","createRef","current","scrollTop","scrollHeight","plots","owner","drawings","drawers","rjCode","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","kicker","gameplay","presentingInfo"],"mappings":"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","file":"static/js/main.a39eaf58.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n\n        background: {\n            default: '#bfffd0',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ffe600 0%, #249c09 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #92C1054D',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, #ff9900 0%, #ff9eff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #FF9C804D',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                {this.props.closeText ? this.props.closeText : 'Close'}\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        let id = `dialog${props.layer ? props.layer : 0}`;\n        let element = document.getElementById(id);\n        if (element == null) {\n            element = document.createElement('div');\n            element.id = id;\n            document.getElementById('dialog').appendChild(element);\n        }\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), element);\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the Plot Tweening server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the Plot Tweening server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the Plot Tweening server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        /*if (window.location.search.startsWith('?$')) {\n            let p = window.location.search.slice('?$'.length);\n        } else */if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 8,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { ButtonGroup, Button, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport playerColours from '../Match/playerColours.json';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    colorButton: {\n        margin: '3px 5px',\n    },\n}));\n\nconst rows = 4;\nconst columns = 4;\n\nfunction ColorPicker(props) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = React.useState(props.selected);\n    const [taken, setTaken] = React.useState([]);\n\n    React.useEffect(() => {\n        socket.emit('changeColor', selected);\n    });\n\n    if (props.matchInfo != null) {\n        React.useEffect(() => {\n            let showTaken = matchInfo => {\n                console.log(':O');\n                setTaken(matchInfo.players.map(p => p.num));\n            };\n            socket.on('matchUpdate', showTaken);\n            showTaken(props.matchInfo);\n            return () => socket.off('matchUpdate', showTaken);\n        }, []);\n    }\n\n    return (\n        <ButtonGroup orientation=\"vertical\">\n            {(() => {\n                let buttonGroups = [];\n                for (let i = 0; i < rows * columns; i+=rows) {\n                    buttonGroups.push(<ButtonGroup>{(() => {\n                        let buttons = [];\n                        for (let k = i; k < i+rows; k++) {\n                            buttons.push(\n                                <Tooltip title={playerColours[k]}>\n                                    <Button\n                                        className={`${classes.colorButton} pfp`}\n                                        style={{backgroundImage: `url(/pfps/${k}.png)`, opacity: selected == k ? 1 : (taken.includes(k) ? 0.2 : 0.5)}}\n                                        onClick={() => {\n                                            if (!taken.includes(k)) {\n                                                localStorage.stcolor = String(k);\n                                                setSelected(k);\n                                            }\n                                        }}\n                                    />\n                                </Tooltip>\n                            );\n                        }\n                        return buttons;\n                    })()}</ButtonGroup>);\n                }\n                return buttonGroups;\n            })()}\n        </ButtonGroup>\n    );\n}\n\nexport default ColorPicker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport arrayMove from 'array-move';\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction, ButtonGroup, Button, Divider, Tooltip, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport showDialog from '../Dialog/show';\nimport copy from 'clipboard-copy';\nimport defaultPresets from './defaultPresets.json';\nimport defaultMatchOptions from './defaultMatchOptions.json';\n\nconst copyHelp = 'Copy the preset code of the selected preset to the clipboard';\nconst saveHelp = 'Save the current match options to the selected preset';\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        height: 300,\n        width: '100%',\n        overflowY: 'scroll',\n        border: '1px solid #00000030',\n        borderRadius: 5,\n    },\n    actions: {\n        width: '100%',\n        display: 'flex',\n        '& > *': {\n            flex: 1,\n        },\n    },\n}));\n\nfunction PresetMenu(props) {\n    const classes = useStyles();\n\n    if (!localStorage.hasOwnProperty('stpresets'))\n        localStorage.stpresets = JSON.stringify(defaultPresets);\n\n    const [enteredPresetCode, setEnteredPresetCode] = React.useState('');\n    const [selected, setSelected] = React.useState(localStorage.stpreset == 'null' ? null : localStorage.stpreset);\n    const [items, setItems] = React.useState(JSON.parse(localStorage.stpresets));\n    const [copyTitle, setCopyTitle] = React.useState(copyHelp);\n    const [saveTitle, setSaveTitle] = React.useState(saveHelp);\n\n    const onDrop = ({ removedIndex, addedIndex }) => {\n        localStorage.stpresets = JSON.stringify(arrayMove(items, removedIndex, addedIndex));\n        loadPresets();\n    };\n\n    let loadPresets = () => setItems(JSON.parse(localStorage.stpresets));\n\n    React.useEffect(() => {\n        if (!items.find(item => item.id == selected)) {\n            setSelected(null);\n            localStorage.stpreset = null;\n        }\n    }, []);\n\n    return (\n        <div>\n            <List className={classes.list}>\n                <Container dragHandleSelector=\".drag-handle\" lockAxis=\"y\" onDrop={onDrop}>\n                    {items.map(({ id, name }) => (\n                        <Draggable key={id}>\n                            <ListItem button className=\"drag-handle\" onClick={() => setSelected(selected == id ? null : id)} selected={selected == id}>\n                                <ListItemText primary={name} />\n                            </ListItem>\n                        </Draggable>\n                    ))}\n                </Container>\n            </List>\n            <ButtonGroup variant=\"contained\" color=\"primary\" className={classes.actions}>\n                <Tooltip title=\"Create a new empty preset\">\n                    <Button onClick={async () => {\n                        let dialog = await showDialog({\n                            title: 'Naming new preset...',\n                            description: 'What should the new preset be called?',\n                            buttonText: 'Create',\n                            layer: 1,\n                            buttonAction: () => {\n                                let presets = JSON.parse(localStorage.stpresets);\n                                presets.push({\n                                    id: String(Math.random()).slice(2),\n                                    name: document.getElementById('presetName').value,\n                                    options: props.options,\n                                });\n                                localStorage.stpresets = JSON.stringify(presets);\n                                loadPresets();\n                                dialog.handleClose();\n                            },\n                        }, <TextField\n                            label=\"Preset name\"\n                            id=\"presetName\"\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                        />);\n                    }}>New</Button>\n                </Tooltip>\n                <Tooltip title=\"Use the match options saved in this preset\">\n                    <Button disabled={!props.editable || selected == null} onClick={() => {\n                        props.showMatchOptions({...props, options: items.find(item => item.id == selected).options});\n                        localStorage.stpreset = selected;\n                    }}>Load</Button>\n                </Tooltip>\n                <Tooltip title={saveTitle}>\n                    <Button disabled={selected == null} onClick={() => {\n                        let presets = JSON.parse(localStorage.stpresets);\n                        presets.find(preset => preset.id == selected).options = props.options;\n                        localStorage.stpresets = JSON.stringify(presets);\n                        loadPresets();\n                        setSaveTitle('Saved preset!');\n                        setTimeout(() => {\n                            setSaveTitle(saveHelp);\n                        }, 3000);\n                    }}>Save</Button>\n                </Tooltip>\n                <Tooltip title={copyTitle}>\n                    <Button disabled={selected == null} onClick={() => {\n                        copy(btoa(JSON.stringify(items.find(item => item.id == selected).options)));\n                        setCopyTitle('Copied preset code to clipboard!');\n                        setTimeout(() => {\n                            setCopyTitle(copyHelp);\n                        }, 3000);\n                    }}>Export</Button>\n                </Tooltip>\n                <Tooltip title=\"Delete the selected preset\">\n                    <Button disabled={selected == null} onClick={async () => {\n                        let dialog = await showDialog({\n                            title: 'Really delete preset?',\n                            description: 'Are you sure you want to delete this preset?',\n                            buttonText: 'Delete',\n                            closeText: 'Cancel',\n                            layer: 1,\n                            buttonAction: () => {\n                                localStorage.stpresets = JSON.stringify(JSON.parse(localStorage.stpresets).filter(preset => preset.id != selected));\n                                loadPresets();\n                                if (localStorage.stpreset == selected)\n                                    localStorage.stpreset = null;\n                                setSelected(null);\n                                dialog.handleClose();\n                            },\n                        });\n                    }}>Delete</Button>\n                </Tooltip>\n            </ButtonGroup>\n\n            <Divider style={{marginTop: 32, marginBottom: 24}} />\n\n            {/*<Typography variant=\"h6\">Preset code loader</Typography>*/}\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <TextField\n                    label=\"Preset code loader\"\n                    defaultValue=\"\"\n                    value={enteredPresetCode}\n                    onChange={e => setEnteredPresetCode(e.target.value)}\n                    helperText=\"Paste your preset code here and click Load to load it\"\n                    variant=\"outlined\"\n                    disabled={!props.editable}\n                />\n                <Button color={props.editable ? 'primary' : 'default'} disabled={!props.editable} onClick={() => {\n                    try {\n                        props.showMatchOptions({...props, options: {...props.options, ...JSON.parse(atob(enteredPresetCode))}});\n                    } catch(e) {\n                        alert(e);\n                    }\n                }}>Load</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default PresetMenu;","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Tooltip, IconButton, TextField, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LinkIcon from '@material-ui/icons/Link';\nimport showDialog from '../Dialog/show';\nimport PresetMenu from './PresetMenu';\nimport socket from '../socket';\nimport defaultMatchOptions from './defaultMatchOptions.json';\nimport { TextFieldsOutlined } from '@material-ui/icons';\nconst allowedPlayers = [3, 15];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    select: {\n        width: 200,\n    },\n    smallSelect: {\n        width: 50,\n    },\n}));\n\nlet optionsToLoad = false;\nif (localStorage.stpresets && localStorage.stpreset) {\n    let preset = JSON.parse(localStorage.stpresets).find(preset => preset.id == localStorage.stpreset);\n    if (preset)\n        optionsToLoad = preset.options;\n}\nconsole.log(optionsToLoad);\n\nvar options = {\n    ...defaultMatchOptions,\n    ...optionsToLoad ? optionsToLoad : {},\n};\n\nfor (let i in options) {\n    if (typeof options[i] == 'object' && !Array.isArray(options[i]))\n        options[i] = {\n            ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions)[i] : {},\n            ...options[i]\n        }\n}\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            {props.bigChange ? <Button onClick={() => props.fn(-10)} disabled={props.disabled || props.state == props.min}>- -</Button> : null}\n            <Button onClick={() => props.fn(-1)} disabled={props.disabled || props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.disabled || props.state == props.max}>+</Button>\n            {props.bigChange ? <Button onClick={() => props.fn(+10)} disabled={props.disabled || props.state == props.max}>++</Button> : null}\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions(props) {\n    const classes = useStyles();\n\n    if (props.options)\n        options = props.options;\n\n    const sendUpdate = () => {\n        if (props.editable && props.started)\n            socket.emit('updateOptions', options);\n    }\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n        sendUpdate();\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n        sendUpdate();\n    };\n    \n    let updateOptions = () => {\n        setPublicity(options.public);\n        setPlayers(options.players);\n    };\n    React.useEffect(() => {\n        sendUpdate();\n        window.addEventListener('matchOptionsChanged', updateOptions);\n        return () => window.removeEventListener('matchOptionsChanged', updateOptions);\n    }, []);\n\n    return (\n        <div>\n            <Button color=\"secondary\" onClick={async () => {\n                dialog = await showDialog({\n                    title: 'Option presets',\n                    buttonText: 'Back',\n                    buttonAction: () => showMatchOptions(props),\n                }, <PresetMenu {...props} showMatchOptions={showMatchOptions} options={options} />);\n            }}>Presets</Button>\n            <Divider style={{marginTop: 16}} />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Privacy</FormLabel>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                        <Grid item><LockIcon /></Grid>\n                        <Grid item>\n                            <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} disabled={!props.editable} />\n                        </Grid>\n                        <Grid item><PublicIcon /></Grid>\n                    </Grid>\n                </Typography>\n\n                {props.started ? <Button color={props.editable ? 'primary' : 'disabled'} size=\"small\" onClick={() => socket.emit('newRoomCode')} disabled={!props.editable}>New room code</Button> : null}\n            </FormControl>\n\n            <Divider />\n            \n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} disabled={props.started} bigChange />\n            </FormControl>\n        </div>\n    );\n}\n\nfunction changeOptions(newOptions) {\n    options = newOptions;\n    window.dispatchEvent(new Event('matchOptionsChanged'));\n}\n\nfunction hostChanged(amNowHost) {\n    if (dialog.state.open && dialog.editable != amNowHost)\n        showMatchOptions({editable: amNowHost, started: true});\n}\n\nvar dialog = {\n    state: {\n        open: false,\n    }\n};\n\nasync function showMatchOptions(props) {\n    let elem;\n\n    dialog = await showDialog({\n        ...(props.started ? {\n            title: 'Match options',\n            description: `Current options${props.ingame ? '' : ' (editable by the host)'}:`,\n        } : {\n            title: 'Create Match',\n            description: 'Match options:',\n            buttonText: 'Create',\n            buttonAction: () => {\n                dialog.handleClose();\n                socket.emit('createMatch', options);\n            }\n        }),\n    }, <MatchOptions {...props} />);\n    dialog.editable = props.editable;\n}\n\n/*function PresetLoader(props) {\n    let [enteredOptions, setEnteredOptions] = React.useState('');\n    let copyHelp = 'Copy the options code for your currently chosen match options.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (<div>\n        <TextField\n            label=\"Options code\"\n            defaultValue=\"\"\n            value={enteredOptions}\n            onChange={e => setEnteredOptions(e.target.value)}\n            helperText=\"Paste your options code here and click Load to load it\"\n            variant=\"outlined\"\n            disabled={!props.editable}\n        />\n        <Button color={props.editable ? 'primary' : 'default'} disabled={!props.editable} onClick={() => {\n            try {\n                options = {...options, ...JSON.parse(atob(enteredOptions))};\n                showMatchOptions(props);\n            } catch(e) {\n                alert(e);\n            }\n        }}>Load</Button>\n\n        <Divider />\n        <Tooltip title={copyTitle}>\n            <IconButton onClick={() => {\n                copy(btoa(JSON.stringify(options)));\n                setCopyTitle('Copied to clipboard!');\n                setTimeout(() => {\n                    setCopyTitle(copyHelp);\n                }, 3000);\n            }}><LinkIcon /></IconButton>\n        </Tooltip>\n    </div>);\n}\n\nasync function presetLoader(props) {\n    dialog = await showDialog({\n        title: 'Preset loader/saver',\n        buttonText: 'Match options',\n        buttonAction: () => showMatchOptions(props),\n    }, <PresetLoader {...props} />);\n}*/\n\nexport default {\n    showMatchOptions,\n    changeOptions,\n    hostChanged,\n};","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 125,\n        marginRight: 5,\n    },\n}));\n\nfunction Options() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Typography variant=\"h4\">Options</Typography>\n            <Typography>i havent made any options yet</Typography>\n        </div>\n    );\n};\n\nexport default Options;","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nfunction Premise() {\n    let videoID = 'ScMzIvxBSi4';\n    return (\n        <div>\n            <img src=\"/icon.png\" style={{maxWidth: '100%', width: 300}} />\n            <Typography>In PlotTweening, you connect a beginning and ending which only share a vague theme.</Typography>\n            <br />\n            <Typography variant=\"h5\">Video</Typography>\n            <Typography>Here's <Link href={`https://youtu.be/${videoID}`} target=\"_blank\" rel=\"noopener\">a YouTube video</Link> showing the game in action.</Typography>\n            <iframe style={{width: '100%', height: '250px'}} src={`https://www.youtube.com/embed/${videoID}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </div>\n    );\n};\n\nexport default Premise;","import Options from './Options.js';\nimport Premise from './Premise';\n\nexport default {\n    Premise,\n    Options,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport sections from './sections';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n    },\n    tabs: {\n        minWidth: 90,\n        width: 90,\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n    tab: {\n        minWidth: 'unset',\n    },\n    tabPanel: {\n        overflowY: 'scroll',\n    },\n}));\n\nfunction DialogCentre() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                classes={{\n                    root: classes.tabs,\n                }}\n            >\n                <Tab className={classes.tab} label=\"Premise\" />\n                <Tab className={classes.tab} label=\"Options\" />\n            </Tabs>\n            <TabPanel classes={classes.tabPanel} value={value} index={0}>\n                <sections.Premise />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={1}>\n                <sections.Options />\n            </TabPanel>\n        </div>\n    );\n};\n\nexport default DialogCentre;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogCentre from './DialogCentre.js';\n\nconst useStyles = makeStyles((theme) => ({\n    centre: {\n        padding: 0\n    }\n}));\n\nfunction RulesDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    exp.openRules = handleClickOpen;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            disablePortal\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Help</DialogTitle>\n            <DialogContent classes={{root: classes.centre}} dividers>\n                <DialogCentre />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"secondary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst exp = {};\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><RulesDialog /></ThemeProvider>, document.getElementById('rules'));\n\nexport default exp;","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport HelpIcon from '@material-ui/icons/Help';\nimport RulesDialog from './RulesDialog';\n\nconst ShowRulesIcon = HelpIcon;\n\nfunction showRules() {\n    RulesDialog.openRules();\n}\n\nfunction ShowRulesButton() {\n    return <IconButton onClick={showRules}><ShowRulesIcon /></IconButton>;\n}\n\nexport default {\n    ShowRulesIcon,\n    ShowRulesButton,\n    showRules\n};","import React from 'react';\nimport { Typography, Button, Divider, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport ColorPicker from '../Lobby/ColorPicker';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\nimport showDialog from '../Dialog/show';\nimport playerColours from '../Match/playerColours.json';\nimport rules from '../Rules';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #0000001f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"Plot Tweening\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Form a story by everyone drawing what happens inbetween events. <Link onClick={rules.showRules}>How to play <rules.ShowRulesIcon fontSize=\"inherit\" /></Link>\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n                <ColorPicker selected={localStorage.stcolor ? Number(localStorage.stcolor) : (() => {localStorage.stcolor = Math.floor(Math.random() * playerColours.length);return localStorage.stcolor})()} matchInfo={null} />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: true, started: false})}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\nimport playerColours from '../Match/playerColours.json';\nimport NameInput from '../Home/NameInput';\nimport ColorPicker from './ColorPicker';\nimport showDialog from '../Dialog/show';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport rules from '../Rules';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    player: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n\n    pfp: {\n        margin: '0 4px',\n    },\n\n    head: {\n        backgroundColor: '#ececec',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        textDecoration: 'underline',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.options.players; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players ? <div className={classes.player}>\n                        {props.matchInfo.host == props.matchInfo.players[i].id ?\n                            <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                                <StarsIcon fontSize=\"inherit\" />\n                            </Tooltip>\n                        : null}\n                        <img className={`${classes.pfp} pfp`} src={`/pfps/${props.matchInfo.players[i].num}.png`} />\n                        <span>{you ? <span className={classes.you}>{content}</span> : content}</span>\n                        {you ? <Tooltip title=\"Customise\">\n                            <IconButton size=\"small\" onClick={() => showDialog({title: 'Customisation'}, <div style={{textAlign: 'center'}}><NameInput /><ColorPicker selected={props.matchInfo.players[i].num} matchInfo={props.matchInfo} /></div>)}><EditIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip> : null}\n                        {amHost && !props.matchInfo.starting && !you ? <span>\n                            <Tooltip title=\"Kick - remove this player from this lobby.\">\n                                <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                            {!props.matchInfo.players[i].bot ? \n                                <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                    <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                                </Tooltip>\n                            : null}\n                        </span> : null}\n                    </div> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    React.useEffect(() => {\n        showMatchOptions.hostChanged(amHost);\n    });\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    React.useEffect(() => {\n        LC.init(document.getElementById('doodleboard'), {imageURLPrefix: '/literallycanvas-0.4.13/img', backgroundColor: 'white'});\n    }, []);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <rules.ShowRulesButton />\n\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.options.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                <Button color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: amHost, started: true})}>Match options</Button>\n                <br /><br />\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? (props.matchInfo.players.length >= 3 ? 'Begin a timer to start the match. No more players will be able to join.' : 'You need 3 players to start a match.') : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost && props.matchInfo.players.length >= 3 ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost || props.matchInfo.players.length < 3}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.options.players}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n\n            <br /><br /><br />\n            <Typography variant=\"h4\" align=\"center\">Personal doodle board</Typography>\n            <div id=\"doodleboard\" />\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport socket from '../socket';\nimport playerColours from '../Match/playerColours.json';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nfunction ComeBackMenu(props) {\n    return (\n        <div>\n            <Typography variant=\"h3\">Who will you rejoin the game as?</Typography>\n            {props.choices.map(choice =>\n                <button\n                    style={{background: playerColours[choice.num]}}\n                    onClick={() => socket.emit('comeback', choice.num, props.code)}\n                >{choice.name}</button>\n            )}\n        </div>\n    );\n}\n\nexport default ComeBackMenu;","import React from 'react';\nimport { Typography, Divider, Tooltip, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport showDialog from '../Dialog/show';\nimport rules from '../Rules';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CodeIcon from '@material-ui/icons/Code';\nimport socket from '../socket';\n\nconst controllerHeight = '30vh';\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        height: 83,\n        //marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: '#50e662',\n        borderBottom: '1px solid #0000001f',\n        zIndex: 1005,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    buttons: {\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        opacity: 1,\n        width: 48,\n        zIndex: 5,\n    },\n\n    do: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    literallyCanvas: {\n        width: 600,\n        maxWidth: '100%',\n    },\n\n    image: {\n        width: 600,\n        maxWidth: '100%',\n        padding: '8px 0',\n    },\n\n    playingStatusContainer: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        '& > div': {\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 5,\n            padding: '4px 8px',\n            border: '1px solid #0000001f',\n            '& > span': {\n                fontSize: 24,\n                paddingLeft: 5,\n            },\n        }\n    },\n});\n\nfunction getImg(paper) {\n\treturn new Promise((res, rej) => {\n\t\tlet paperCanvas = paper.canvasForExport();\n\t\tlet canvas = document.createElement('canvas')\n        canvas.width = paperCanvas.width;\n        canvas.height = paperCanvas.height;\n\t\tlet ctx = canvas.getContext('2d');\n\t\tctx.fillStyle = '#ddd';\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tctx.fillStyle = document.getElementsByClassName('lc-drawing')[0].style['background-color'];\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tconsole.log(ctx.fillStyle);\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t\tres(canvas.toDataURL('image/jpeg', 0.5));\n\t\t};\n\t\timg.src = paperCanvas.toDataURL();\n\t\t//ctx.putImageData(paperCanvas.getContext('2d').getImageData(0, 0, paperCanvas.width, paperCanvas.height), 0, 0);\n\t\t//console.log(canvas.toDataURL());\n\t});\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    let [drawingNum, setDrawingNum] = React.useState(props.matchInfo.drawingNum);\n    let [playingStatus, setPlayingStatus] = React.useState(props.matchInfo.finished);\n    let [canvas, setCanvas] = React.useState(null);\n    let [drawInfo, setDrawInfo] = React.useState(props.matchInfo.theme);\n    let resetCanvas = () => setCanvas(LC.init(document.getElementById('drawingArea'), {imageURLPrefix: '/literallycanvas-0.4.13/img', backgroundColor: 'white', tools: [\n        LC.tools.Pencil,\n        LC.tools.Eraser,\n        LC.tools.Line,\n        LC.tools.Rectangle,\n        LC.tools.Ellipse,\n        LC.tools.Polygon,\n        LC.tools.Pan,\n        LC.tools.Eyedropper\n    ]}));\n\n    React.useEffect(() => {\n        resetCanvas();\n        socket.on('wait', newPlayingStatus => setPlayingStatus(newPlayingStatus));\n        socket.on('newDrawing', info => {\n            setDrawInfo(info);\n            setDrawingNum(drawingNum+1);\n            resetCanvas();\n        });\n\n        return () => {\n            socket.off('wait');\n            socket.off('newDrawing');\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <Tooltip title=\"How many players have finished drawing this turn\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Players done\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h3\">\n                                <span id=\"treasuresFound\">{playingStatus.length}</span>\n                            </Typography>\n                            <Typography variant=\"h5\">\n                                /<span id=\"treasuresNeeded\">{props.players.length}</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n\n                <Tooltip title=\"Turn number\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Drawing #\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h4\">\n                                <span id=\"drawingNum\">{drawingNum+1}</span>\n                            </Typography>\n                            <Typography variant=\"h6\">\n                                /<span id=\"totalDrawings\">{props.players.length}</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n            </div>\n\n            <div className={classes.buttons}>\n                <rules.ShowRulesButton />\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}><SettingsIcon /></IconButton>\n                <IconButton onClick={() => showDialog({\n                    title: \"Room Code\",\n                    description: \"Players can use this code to rejoin the match if they get disconnected:\",\n                }, <Typography variant=\"h2\">{props.matchInfo.code}</Typography>)}><CodeIcon /></IconButton>\n            </div>\n\n            <div className={classes.do} style={{display: playingStatus.includes(props.matchInfo.num) ? 'none' : 'flex'}}>\n                {Array.isArray(drawInfo)\n                ?\n                <Typography>Draw what happens inbetween these two pictures.</Typography>\n                :\n                <Typography>Draw the <b>{drawingNum == 0 ? 'beginning' : 'ending'}</b> of a story with the following theme: <b>{drawInfo}</b>.</Typography>}\n\n                {Array.isArray(drawInfo) ? <img src={drawInfo[0]} className={classes.image} /> : null}\n                <div id=\"drawingArea\" className={classes.literallyCanvas} />\n                {Array.isArray(drawInfo) ? <img src={drawInfo[1]} className={classes.image} /> : null}\n                \n                <Button size=\"large\" color=\"primary\" style={{marginTop: 10}} onClick={async () => {socket.emit('submit', await getImg(canvas)); console.log(canvas, 'a');}}>Submit</Button>\n                \n                <Divider style={{marginTop: 10, marginBottom: 10, width: '100%'}} />\n            </div>\n\n\n            <div className={classes.playingStatusContainer}>\n                {props.players.map(player => <div style={{background: playingStatus.includes(player.num) ? '#73ff7c' : '#ff6b61'}}>\n                    <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                    <span style={{textDecoration: `${player.dead ? 'line-through' : ''}${socket.id.startsWith(player.id) ? ' underline' : ''}`}}>{player.name}</span>\n                </div>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport socket from '../socket/';\nimport playerColours from '../Match/playerColours.json';\nimport showDialog from '../Dialog/show';\nimport rules from '../Rules';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport SettingsIcon from '@material-ui/icons/Settings';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst wins = {\n    'treasure': [true, 'The pirates found all the treasure they needed!'],\n    'kill': [true, 'The pirates found and killed a sea monster!'],\n    'sink': [false, 'The ship sank.'],\n    'snitch': [false, 'The Sea Master found the biologist and snitched on them.'],\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n        '& > table': {\n            width: '95vw',\n            height: '85vh',\n            border: '1px solid #0000001f',\n            borderRadius: 10,\n            background: '#ffffff66',\n\n            '& > thead > td': {\n                textAlign: 'center',\n            },\n\n            '& > tbody > tr > td': {\n                background: '#ffffff66',\n                border: '1px solid #0000001f',\n                borderRadius: 8,\n                height: '70vh',\n                '& > div': {\n                    height: '100%',\n                    overflowY: 'auto',\n                }\n            },\n        }\n    },\n\n    players: {\n        width: 180,\n        maxWidth: 180,\n        '& > div': {\n            '& > div': {\n                width: '95%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: 5,\n                borderRadius: 8,\n                padding: '4px 8px',\n                '& > span': {\n                    display: 'flex',\n                    alignItems: 'center',\n                }\n            }\n        }\n    },\n\n    plot: {\n        overflowAnchor: 'none',\n\n        '& > .anchor': {\n            overflowAnchor: 'auto',\n            height: 1,\n        },\n    },\n\n    plotPoint: {\n        marginTop: 30,\n        '& > div': {\n            display: 'flex',\n            alignItems: 'center',\n            '& > img': {\n                marginRight: 8\n            },\n            '& > span': {\n                fontSize: 20,\n            },\n        },\n        '& > img': {\n            maxWidth: '100%',\n            maxHeight: '60vh',\n        },\n    },\n});\n\nfunction Presentation(props) {\n    const classes = useStyles();\n\n    let [presenting, setPresenting] = React.useState(props.matchInfo.presenting);\n    let [drawing, setDrawing] = React.useState(props.matchInfo.presentingImage);\n    let plotDiv = React.createRef();\n    \n    React.useEffect(() => {\n        (new Audio('/endMatch.mp3')).play();\n\n        socket.on('presentNewPlot', () => {\n            setPresenting(presenting+1);\n            presenting++;\n            setDrawing(0);\n            drawing = 0;\n        });\n        socket.on('presentNewDrawing', () => {\n            setDrawing(drawing+1);\n            drawing++;\n        });\n\n        return () => {\n            socket.off('presentNewPlot');\n            socket.off('presentNewDrawing');\n        };\n    }, []);\n\n    React.useEffect(() => {\n        plotDiv.current.scrollTop = plotDiv.current.scrollHeight;\n    }, [drawing]);\n    \n\n    return (\n        <div className={classes.root}>\n            <div style={{display: 'flex'}}>\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}>\n                    <SettingsIcon />\n                </IconButton>\n                <IconButton href=\"/\">\n                    <HomeIcon />\n                </IconButton>\n                <rules.ShowRulesButton />\n            </div>\n\n            <table>\n                <thead>\n                    <td><Typography variant=\"h4\">Players</Typography></td>\n                    <td><Typography variant=\"h4\" a={console.log(props.matchInfo)}>{props.matchInfo.players.find(p => p.num == props.matchInfo.plots[presenting].owner).name}'s plot</Typography></td>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className={classes.players}><div>{props.matchInfo.plots.map((plot, index) => {\n                            let player = props.matchInfo.players.find(p => p.num == plot.owner);\n\n                            return (\n                                <div style={{background: index == presenting ? '#66f542': '#e3e3e3'}}>\n                                    <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                                    <span style={{textDecoration: props.matchInfo.num == player.num ? 'underline' : 'none'}}>\n                                        {player.name}\n                                        {props.matchInfo.host == player.num ? <Tooltip title=\"This player is the host. They control when images are shown.\"><StarsIcon /></Tooltip> : null}\n                                    </span>\n                                </div>\n                            );\n                        })}</div></td>\n\n\n                        <td><div className={classes.plot} ref={plotDiv}>\n                            <Typography>The theme was: <b>{props.matchInfo.plots[presenting].theme}</b></Typography>\n\n                            {props.matchInfo.plots[presenting].drawings.slice(0, drawing).map((drawing, index) => {\n                                let player = props.matchInfo.players.find(p => p.num == props.matchInfo.plots[presenting].drawers[index]);\n\n                                return (\n                                    <div className={classes.plotPoint}>\n                                        <div>\n                                            <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                                            <span style={{textDecoration: props.matchInfo.num == player.num ? 'underline' : 'none'}}>{player.name}</span>\n                                        </div>\n                                        <img src={drawing} />\n                                    </div>\n                                );\n                            })}\n\n                            {drawing == props.matchInfo.plots[presenting].drawings.length ? (\n                                <div style={{textAlign: 'center'}}>\n                                    <Divider />\n                                    <Typography>End of plot</Typography>\n                                    <Button color=\"secondary\" onClick={() => showDialog({title: 'laziness', description: 'i havent made this feature yet lol'})}>Download as gif</Button>\n                                </div>\n                            ) : null}\n\n                            {drawing == props.matchInfo.plots[presenting].drawings.length && presenting == props.matchInfo.plots.length-1 ? <Button color=\"primary\" size=\"large\" onClick={() => socket.emit('rejoin', props.rjCode, props.matchInfo.options)}>Play again</Button> : (\n                                props.matchInfo.amHost ? <Button color=\"primary\" onClick={() => socket.emit('presentNext')} size=\"large\">Next</Button> : null\n                            )}\n                        </div></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Presentation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport ComeBackMenu from '../Lobby/ComeBackMenu';\nimport * as gameplay from '../Match/gameplay';\nimport defaultMatchOptions from '../Home/defaultMatchOptions.json';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        layer: 'err',\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('noMatches', async () => {\n    let dialog = await showDialog({\n        title: 'No public matches available.',\n        description: 'Maybe create one yourself for people to join?',\n        buttonText: 'Create match with default options',\n        buttonAction: () => {\n            dialog.handleClose();\n            socket.emit('createMatch', {...defaultMatchOptions, public: true});\n        },\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        showDialog({\n            title: 'Disconnected.',\n            description: 'Lost connection to the Plot Tweening server. You might not be able to do anything. Sorry :/',\n        });\n        //window.location.reload();\n    }, 200);\n});\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n    showMatchOptions.changeOptions(matchInfo.options);\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('comebackchoice', (choices, code) => ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ComeBackMenu choices={choices} code={code} /></ThemeProvider>, document.getElementById('root')));\n\nsocket.on('waiting');\n\nsocket.on('present', (presentingInfo, rjCode) => gameplay.present(presentingInfo, rjCode));\nsocket.on('rejoin', code => window.location.href = `/?${code}`);\n\nexport default socket;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Presentation from '../Presentation';\n\nfunction playMatch(matchInfo, myId) {\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match matchInfo={matchInfo} players={matchInfo.players} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {        \n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction present(matchInfo, rjCode) {\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Presentation matchInfo={matchInfo} rjCode={rjCode} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n}\n\nexport {\n    playMatch,\n\n    present,\n};"],"sourceRoot":""}