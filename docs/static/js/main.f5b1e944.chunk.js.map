{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Lobby/ColorPicker.js","Home/PresetMenu.js","Home/showMatchOptions.js","Rules/sections/Options.js","Rules/sections/Premise.js","Rules/sections/index.js","Rules/DialogCentre.js","Rules/RulesDialog.js","Rules/index.js","Home/index.js","Lobby/index.js","Lobby/ComeBackMenu.js","Match/index.js","Presentation/gifCreator.js","Presentation/index.js","socket/index.js","Match/gameplay.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","closeText","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","layer","element","document","getElementById","createElement","appendChild","ReactDOM","render","ThemeProvider","CssBaseline","ref","dialog","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","colorButton","ColorPicker","selected","setSelected","taken","setTaken","useEffect","matchInfo","showTaken","players","map","p","num","on","off","ButtonGroup","orientation","buttonGroups","i","push","buttons","k","Tooltip","playerColours","style","backgroundImage","opacity","includes","stcolor","String","rows","copyHelp","saveHelp","list","height","overflowY","actions","flex","PresetMenu","hasOwnProperty","stpresets","JSON","stringify","defaultPresets","enteredPresetCode","setEnteredPresetCode","stpreset","parse","items","setItems","copyTitle","setCopyTitle","saveTitle","setSaveTitle","loadPresets","find","List","dragHandleSelector","lockAxis","onDrop","removedIndex","addedIndex","arrayMove","ListItem","button","ListItemText","presets","Math","random","options","defaultValue","disabled","editable","showMatchOptions","preset","copy","btoa","filter","Divider","flexDirection","helperText","atob","alert","allowedPlayers","formControl","select","smallSelect","optionsToLoad","defaultMatchOptions","Array","isArray","MatchOptions","NumberTweaker","bigChange","fn","min","max","sendUpdate","started","public","publicity","setPublicity","setPlayers","updateOptions","addEventListener","removeEventListener","FormLabel","Typography","component","Switch","checked","change","ingame","changeOptions","newOptions","dispatchEvent","Event","hostChanged","amNowHost","card","Premise","videoID","src","maxWidth","Link","href","rel","frameBorder","allow","allowFullScreen","Options","TabPanel","index","other","role","hidden","Box","root","flexGrow","backgroundColor","paper","tabs","minWidth","borderRight","divider","tab","tabPanel","DialogCentre","setValue","Tabs","newValue","Tab","sections","centre","RulesDialog","setOpen","exp","openRules","ShowRulesIcon","HelpIcon","showRules","ShowRulesButton","logoImage","controls","Home","gutterBottom","alt","rules","fontSize","Number","floor","privacyIcon","table","player","justifyContent","pfp","head","tableCell","you","textDecoration","Lobby","tableBody","amHost","startsWith","host","content","TableRow","TableCell","starting","bot","Audio","startTimer","play","LC","init","imageURLPrefix","protocol","TableContainer","Paper","Table","TableHead","TableBody","align","ComeBackMenu","choices","choice","gameInfo","top","borderBottom","zIndex","gameInfoTitle","gameInfoContent","do","literallyCanvas","image","playingStatusContainer","flexWrap","paddingLeft","getImg","rej","paperCanvas","canvasForExport","canvas","ctx","getContext","fillStyle","fillRect","getElementsByClassName","img","Image","onload","drawImage","toDataURL","Match","myId","drawingNum","setDrawingNum","finished","playingStatus","setPlayingStatus","setCanvas","drawInfo","setDrawInfo","submittable","setSubmittable","resetCanvas","tools","Pencil","Eraser","LCFill","Line","Rectangle","Ellipse","Polygon","Pan","Eyedropper","newPlayingStatus","info","dead","themeFrame","textBaseline","font","fillText","logo","onerror","drawingFrame","drawing","drawingImg","newWidth","strokeStyle","strokeText","save","beginPath","arc","PI","closePath","clip","restore","plots","all","concat","apply","plot","drawings","drawers","frames","gif","GIF","forEach","frame","addFrame","delay","blob","url","URL","createObjectURL","download","Date","now","body","click","revokeObjectURL","createGif","overflowAnchor","plotPoint","maxHeight","Presentation","presenting","setPresenting","presentingImage","setDrawing","plotDiv","createRef","current","scrollTop","scrollHeight","owner","rjCode","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","kicker","gameplay","presentingInfo"],"mappings":"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","file":"static/js/main.f5b1e944.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n\n        background: {\n            default: '#bfffd0',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ffe600 0%, #249c09 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #92C1054D',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, #ff9900 0%, #ff9eff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px #FF9C804D',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                {this.props.closeText ? this.props.closeText : 'Close'}\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        let id = `dialog${props.layer ? props.layer : 0}`;\n        let element = document.getElementById(id);\n        if (element == null) {\n            element = document.createElement('div');\n            element.id = id;\n            document.getElementById('dialog').appendChild(element);\n        }\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), element);\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the Plot Tweening server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the Plot Tweening server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the Plot Tweening server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        /*if (window.location.search.startsWith('?$')) {\n            let p = window.location.search.slice('?$'.length);\n        } else */if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 8,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { ButtonGroup, Button, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport playerColours from '../Match/playerColours.json';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    colorButton: {\n        margin: '3px 5px',\n    },\n}));\n\nconst rows = 5;\nconst columns = 5;\n\nfunction ColorPicker(props) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = React.useState(props.selected);\n    const [taken, setTaken] = React.useState([]);\n\n    React.useEffect(() => {\n        socket.emit('changeColor', selected);\n    });\n\n    if (props.matchInfo != null) {\n        React.useEffect(() => {\n            let showTaken = matchInfo => {\n                setTaken(matchInfo.players.map(p => p.num));\n            };\n            socket.on('matchUpdate', showTaken);\n            showTaken(props.matchInfo);\n            return () => socket.off('matchUpdate', showTaken);\n        }, []);\n    }\n\n    return (\n        <ButtonGroup orientation=\"vertical\">\n            {(() => {\n                let buttonGroups = [];\n                for (let i = 0; i < rows * columns; i+=rows) {\n                    buttonGroups.push(<ButtonGroup>{(() => {\n                        let buttons = [];\n                        for (let k = i; k < i+rows; k++) {\n                            buttons.push(\n                                <Tooltip title={playerColours[k]}>\n                                    <Button\n                                        className={`${classes.colorButton} pfp`}\n                                        style={{backgroundImage: `url(/pfps/${k}.png)`, opacity: selected == k ? 1 : (taken.includes(k) ? 0.2 : 0.5)}}\n                                        onClick={() => {\n                                            if (!taken.includes(k)) {\n                                                localStorage.stcolor = String(k);\n                                                setSelected(k);\n                                            }\n                                        }}\n                                    />\n                                </Tooltip>\n                            );\n                        }\n                        return buttons;\n                    })()}</ButtonGroup>);\n                }\n                return buttonGroups;\n            })()}\n        </ButtonGroup>\n    );\n}\n\nexport default ColorPicker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport arrayMove from 'array-move';\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction, ButtonGroup, Button, Divider, Tooltip, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport showDialog from '../Dialog/show';\nimport copy from 'clipboard-copy';\nimport defaultPresets from './defaultPresets.json';\nimport defaultMatchOptions from './defaultMatchOptions.json';\n\nconst copyHelp = 'Copy the preset code of the selected preset to the clipboard';\nconst saveHelp = 'Save the current match options to the selected preset';\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        height: 300,\n        width: '100%',\n        overflowY: 'scroll',\n        border: '1px solid #00000030',\n        borderRadius: 5,\n    },\n    actions: {\n        width: '100%',\n        display: 'flex',\n        '& > *': {\n            flex: 1,\n        },\n    },\n}));\n\nfunction PresetMenu(props) {\n    const classes = useStyles();\n\n    if (!localStorage.hasOwnProperty('stpresets'))\n        localStorage.stpresets = JSON.stringify(defaultPresets);\n\n    const [enteredPresetCode, setEnteredPresetCode] = React.useState('');\n    const [selected, setSelected] = React.useState(localStorage.stpreset == 'null' ? null : localStorage.stpreset);\n    const [items, setItems] = React.useState(JSON.parse(localStorage.stpresets));\n    const [copyTitle, setCopyTitle] = React.useState(copyHelp);\n    const [saveTitle, setSaveTitle] = React.useState(saveHelp);\n\n    const onDrop = ({ removedIndex, addedIndex }) => {\n        localStorage.stpresets = JSON.stringify(arrayMove(items, removedIndex, addedIndex));\n        loadPresets();\n    };\n\n    let loadPresets = () => setItems(JSON.parse(localStorage.stpresets));\n\n    React.useEffect(() => {\n        if (!items.find(item => item.id == selected)) {\n            setSelected(null);\n            localStorage.stpreset = null;\n        }\n    }, []);\n\n    return (\n        <div>\n            <List className={classes.list}>\n                <Container dragHandleSelector=\".drag-handle\" lockAxis=\"y\" onDrop={onDrop}>\n                    {items.map(({ id, name }) => (\n                        <Draggable key={id}>\n                            <ListItem button className=\"drag-handle\" onClick={() => setSelected(selected == id ? null : id)} selected={selected == id}>\n                                <ListItemText primary={name} />\n                            </ListItem>\n                        </Draggable>\n                    ))}\n                </Container>\n            </List>\n            <ButtonGroup variant=\"contained\" color=\"primary\" className={classes.actions}>\n                <Tooltip title=\"Create a new empty preset\">\n                    <Button onClick={async () => {\n                        let dialog = await showDialog({\n                            title: 'Naming new preset...',\n                            description: 'What should the new preset be called?',\n                            buttonText: 'Create',\n                            layer: 1,\n                            buttonAction: () => {\n                                let presets = JSON.parse(localStorage.stpresets);\n                                presets.push({\n                                    id: String(Math.random()).slice(2),\n                                    name: document.getElementById('presetName').value,\n                                    options: props.options,\n                                });\n                                localStorage.stpresets = JSON.stringify(presets);\n                                loadPresets();\n                                dialog.handleClose();\n                            },\n                        }, <TextField\n                            label=\"Preset name\"\n                            id=\"presetName\"\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                        />);\n                    }}>New</Button>\n                </Tooltip>\n                <Tooltip title=\"Use the match options saved in this preset\">\n                    <Button disabled={!props.editable || selected == null} onClick={() => {\n                        props.showMatchOptions({...props, options: items.find(item => item.id == selected).options});\n                        localStorage.stpreset = selected;\n                    }}>Load</Button>\n                </Tooltip>\n                <Tooltip title={saveTitle}>\n                    <Button disabled={selected == null} onClick={() => {\n                        let presets = JSON.parse(localStorage.stpresets);\n                        presets.find(preset => preset.id == selected).options = props.options;\n                        localStorage.stpresets = JSON.stringify(presets);\n                        loadPresets();\n                        setSaveTitle('Saved preset!');\n                        setTimeout(() => {\n                            setSaveTitle(saveHelp);\n                        }, 3000);\n                    }}>Save</Button>\n                </Tooltip>\n                <Tooltip title={copyTitle}>\n                    <Button disabled={selected == null} onClick={() => {\n                        copy(btoa(JSON.stringify(items.find(item => item.id == selected).options)));\n                        setCopyTitle('Copied preset code to clipboard!');\n                        setTimeout(() => {\n                            setCopyTitle(copyHelp);\n                        }, 3000);\n                    }}>Export</Button>\n                </Tooltip>\n                <Tooltip title=\"Delete the selected preset\">\n                    <Button disabled={selected == null} onClick={async () => {\n                        let dialog = await showDialog({\n                            title: 'Really delete preset?',\n                            description: 'Are you sure you want to delete this preset?',\n                            buttonText: 'Delete',\n                            closeText: 'Cancel',\n                            layer: 1,\n                            buttonAction: () => {\n                                localStorage.stpresets = JSON.stringify(JSON.parse(localStorage.stpresets).filter(preset => preset.id != selected));\n                                loadPresets();\n                                if (localStorage.stpreset == selected)\n                                    localStorage.stpreset = null;\n                                setSelected(null);\n                                dialog.handleClose();\n                            },\n                        });\n                    }}>Delete</Button>\n                </Tooltip>\n            </ButtonGroup>\n\n            <Divider style={{marginTop: 32, marginBottom: 24}} />\n\n            {/*<Typography variant=\"h6\">Preset code loader</Typography>*/}\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <TextField\n                    label=\"Preset code loader\"\n                    defaultValue=\"\"\n                    value={enteredPresetCode}\n                    onChange={e => setEnteredPresetCode(e.target.value)}\n                    helperText=\"Paste your preset code here and click Load to load it\"\n                    variant=\"outlined\"\n                    disabled={!props.editable}\n                />\n                <Button color={props.editable ? 'primary' : 'default'} disabled={!props.editable} onClick={() => {\n                    try {\n                        props.showMatchOptions({...props, options: {...props.options, ...JSON.parse(atob(enteredPresetCode))}});\n                    } catch(e) {\n                        alert(e);\n                    }\n                }}>Load</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default PresetMenu;","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Tooltip, IconButton, TextField, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LinkIcon from '@material-ui/icons/Link';\nimport showDialog from '../Dialog/show';\nimport PresetMenu from './PresetMenu';\nimport socket from '../socket';\nimport defaultMatchOptions from './defaultMatchOptions.json';\nimport { TextFieldsOutlined } from '@material-ui/icons';\nconst allowedPlayers = [3, 15];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    select: {\n        width: 200,\n    },\n    smallSelect: {\n        width: 50,\n    },\n}));\n\nlet optionsToLoad = false;\nif (localStorage.stpresets && localStorage.stpreset) {\n    let preset = JSON.parse(localStorage.stpresets).find(preset => preset.id == localStorage.stpreset);\n    if (preset)\n        optionsToLoad = preset.options;\n}\n\nvar options = {\n    ...defaultMatchOptions,\n    ...optionsToLoad ? optionsToLoad : {},\n};\n\nfor (let i in options) {\n    if (typeof options[i] == 'object' && !Array.isArray(options[i]))\n        options[i] = {\n            ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions)[i] : {},\n            ...options[i]\n        }\n}\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            {props.bigChange ? <Button onClick={() => props.fn(-10)} disabled={props.disabled || props.state == props.min}>- -</Button> : null}\n            <Button onClick={() => props.fn(-1)} disabled={props.disabled || props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.disabled || props.state == props.max}>+</Button>\n            {props.bigChange ? <Button onClick={() => props.fn(+10)} disabled={props.disabled || props.state == props.max}>++</Button> : null}\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions(props) {\n    const classes = useStyles();\n\n    if (props.options)\n        options = props.options;\n\n    const sendUpdate = () => {\n        if (props.editable && props.started)\n            socket.emit('updateOptions', options);\n    }\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n        sendUpdate();\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n        sendUpdate();\n    };\n    \n    let updateOptions = () => {\n        setPublicity(options.public);\n        setPlayers(options.players);\n    };\n    React.useEffect(() => {\n        sendUpdate();\n        window.addEventListener('matchOptionsChanged', updateOptions);\n        return () => window.removeEventListener('matchOptionsChanged', updateOptions);\n    }, []);\n\n    return (\n        <div>\n            <Button color=\"secondary\" onClick={async () => {\n                dialog = await showDialog({\n                    title: 'Option presets',\n                    buttonText: 'Back',\n                    buttonAction: () => showMatchOptions(props),\n                }, <PresetMenu {...props} showMatchOptions={showMatchOptions} options={options} />);\n            }}>Presets</Button>\n            <Divider style={{marginTop: 16}} />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Privacy</FormLabel>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                        <Grid item><LockIcon /></Grid>\n                        <Grid item>\n                            <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} disabled={!props.editable} />\n                        </Grid>\n                        <Grid item><PublicIcon /></Grid>\n                    </Grid>\n                </Typography>\n\n                {props.started ? <Button color={props.editable ? 'primary' : 'disabled'} size=\"small\" onClick={() => socket.emit('newRoomCode')} disabled={!props.editable}>New room code</Button> : null}\n            </FormControl>\n\n            <Divider />\n            \n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} disabled={props.started} bigChange />\n            </FormControl>\n        </div>\n    );\n}\n\nfunction changeOptions(newOptions) {\n    options = newOptions;\n    window.dispatchEvent(new Event('matchOptionsChanged'));\n}\n\nfunction hostChanged(amNowHost) {\n    if (dialog.state.open && dialog.editable != amNowHost)\n        showMatchOptions({editable: amNowHost, started: true});\n}\n\nvar dialog = {\n    state: {\n        open: false,\n    }\n};\n\nasync function showMatchOptions(props) {\n    let elem;\n\n    dialog = await showDialog({\n        ...(props.started ? {\n            title: 'Match options',\n            description: `Current options${props.ingame ? '' : ' (editable by the host)'}:`,\n        } : {\n            title: 'Create Match',\n            description: 'Match options:',\n            buttonText: 'Create',\n            buttonAction: () => {\n                dialog.handleClose();\n                socket.emit('createMatch', options);\n            }\n        }),\n    }, <MatchOptions {...props} />);\n    dialog.editable = props.editable;\n}\n\n/*function PresetLoader(props) {\n    let [enteredOptions, setEnteredOptions] = React.useState('');\n    let copyHelp = 'Copy the options code for your currently chosen match options.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (<div>\n        <TextField\n            label=\"Options code\"\n            defaultValue=\"\"\n            value={enteredOptions}\n            onChange={e => setEnteredOptions(e.target.value)}\n            helperText=\"Paste your options code here and click Load to load it\"\n            variant=\"outlined\"\n            disabled={!props.editable}\n        />\n        <Button color={props.editable ? 'primary' : 'default'} disabled={!props.editable} onClick={() => {\n            try {\n                options = {...options, ...JSON.parse(atob(enteredOptions))};\n                showMatchOptions(props);\n            } catch(e) {\n                alert(e);\n            }\n        }}>Load</Button>\n\n        <Divider />\n        <Tooltip title={copyTitle}>\n            <IconButton onClick={() => {\n                copy(btoa(JSON.stringify(options)));\n                setCopyTitle('Copied to clipboard!');\n                setTimeout(() => {\n                    setCopyTitle(copyHelp);\n                }, 3000);\n            }}><LinkIcon /></IconButton>\n        </Tooltip>\n    </div>);\n}\n\nasync function presetLoader(props) {\n    dialog = await showDialog({\n        title: 'Preset loader/saver',\n        buttonText: 'Match options',\n        buttonAction: () => showMatchOptions(props),\n    }, <PresetLoader {...props} />);\n}*/\n\nexport default {\n    showMatchOptions,\n    changeOptions,\n    hostChanged,\n};","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 125,\n        marginRight: 5,\n    },\n}));\n\nfunction Options() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Typography variant=\"h4\">Options</Typography>\n            <Typography>i havent made any options yet</Typography>\n        </div>\n    );\n};\n\nexport default Options;","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nfunction Premise() {\n    let videoID = 'ScMzIvxBSi4';\n    return (\n        <div>\n            <img src=\"/icon.png\" style={{maxWidth: '100%', width: 300}} />\n            <Typography>In PlotTweening, you connect a beginning and ending which only share a vague theme.</Typography>\n            <br />\n            <Typography variant=\"h5\">Video</Typography>\n            <Typography>Here's <Link href={`https://youtu.be/${videoID}`} target=\"_blank\" rel=\"noopener\">a YouTube video</Link> showing the game in action.</Typography>\n            <iframe style={{width: '100%', height: '250px'}} src={`https://www.youtube.com/embed/${videoID}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </div>\n    );\n};\n\nexport default Premise;","import Options from './Options.js';\nimport Premise from './Premise';\n\nexport default {\n    Premise,\n    Options,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport sections from './sections';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n    },\n    tabs: {\n        minWidth: 90,\n        width: 90,\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n    tab: {\n        minWidth: 'unset',\n    },\n    tabPanel: {\n        overflowY: 'scroll',\n    },\n}));\n\nfunction DialogCentre() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                classes={{\n                    root: classes.tabs,\n                }}\n            >\n                <Tab className={classes.tab} label=\"Premise\" />\n                <Tab className={classes.tab} label=\"Options\" />\n            </Tabs>\n            <TabPanel classes={classes.tabPanel} value={value} index={0}>\n                <sections.Premise />\n            </TabPanel>\n            <TabPanel classes={classes.tabPanel} value={value} index={1}>\n                <sections.Options />\n            </TabPanel>\n        </div>\n    );\n};\n\nexport default DialogCentre;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogCentre from './DialogCentre.js';\n\nconst useStyles = makeStyles((theme) => ({\n    centre: {\n        padding: 0\n    }\n}));\n\nfunction RulesDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    exp.openRules = handleClickOpen;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            disablePortal\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Help</DialogTitle>\n            <DialogContent classes={{root: classes.centre}} dividers>\n                <DialogCentre />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"secondary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst exp = {};\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><RulesDialog /></ThemeProvider>, document.getElementById('rules'));\n\nexport default exp;","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport HelpIcon from '@material-ui/icons/Help';\nimport RulesDialog from './RulesDialog';\n\nconst ShowRulesIcon = HelpIcon;\n\nfunction showRules() {\n    RulesDialog.openRules();\n}\n\nfunction ShowRulesButton() {\n    return <IconButton onClick={showRules}><ShowRulesIcon /></IconButton>;\n}\n\nexport default {\n    ShowRulesIcon,\n    ShowRulesButton,\n    showRules\n};","import React from 'react';\nimport { Typography, Button, Divider, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport ColorPicker from '../Lobby/ColorPicker';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\nimport showDialog from '../Dialog/show';\nimport playerColours from '../Match/playerColours.json';\nimport rules from '../Rules';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #0000001f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"Plot Tweening\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Form a story by everyone drawing what happens inbetween events. <Link onClick={rules.showRules}>How to play <rules.ShowRulesIcon fontSize=\"inherit\" /></Link>\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n                <ColorPicker selected={localStorage.stcolor ? Number(localStorage.stcolor) : (() => {localStorage.stcolor = Math.floor(Math.random() * playerColours.length);return localStorage.stcolor})()} matchInfo={null} />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: true, started: false})}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\nimport playerColours from '../Match/playerColours.json';\nimport NameInput from '../Home/NameInput';\nimport ColorPicker from './ColorPicker';\nimport showDialog from '../Dialog/show';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport rules from '../Rules';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    player: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n\n    pfp: {\n        margin: '0 4px',\n    },\n\n    head: {\n        backgroundColor: '#ececec',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        textDecoration: 'underline',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.options.players; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players ? <div className={classes.player}>\n                        {props.matchInfo.host == props.matchInfo.players[i].id ?\n                            <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                                <StarsIcon fontSize=\"inherit\" />\n                            </Tooltip>\n                        : null}\n                        <img className={`${classes.pfp} pfp`} src={`/pfps/${props.matchInfo.players[i].num}.png`} />\n                        <span>{you ? <span className={classes.you}>{content}</span> : content}</span>\n                        {you ? <Tooltip title=\"Customise\">\n                            <IconButton size=\"small\" onClick={() => showDialog({title: 'Customisation'}, <div style={{textAlign: 'center'}}><NameInput /><ColorPicker selected={props.matchInfo.players[i].num} matchInfo={props.matchInfo} /></div>)}><EditIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip> : null}\n                        {amHost && !props.matchInfo.starting && !you ? <span>\n                            <Tooltip title=\"Kick - remove this player from this lobby.\">\n                                <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                            {!props.matchInfo.players[i].bot ? \n                                <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                    <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                                </Tooltip>\n                            : null}\n                        </span> : null}\n                    </div> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    React.useEffect(() => {\n        showMatchOptions.hostChanged(amHost);\n    });\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    React.useEffect(() => {\n        LC.init(document.getElementById('doodleboard'), {imageURLPrefix: '/literallycanvas-0.4.13/img', backgroundColor: 'white'});\n    }, []);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <rules.ShowRulesButton />\n\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.options.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                <Button color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions({editable: amHost, started: true})}>Match options</Button>\n                <br /><br />\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? (props.matchInfo.players.length >= 3 ? 'Begin a timer to start the match. No more players will be able to join.' : 'You need 3 players to start a match.') : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost && props.matchInfo.players.length >= 3 ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost || props.matchInfo.players.length < 3}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.options.players}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n\n            <br /><br /><br />\n            <Typography variant=\"h4\" align=\"center\">Personal doodle board</Typography>\n            <div id=\"doodleboard\" />\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport socket from '../socket';\nimport playerColours from '../Match/playerColours.json';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nfunction ComeBackMenu(props) {\n    return (\n        <div>\n            <Typography variant=\"h3\">Who will you rejoin the game as?</Typography>\n            {props.choices.map(choice =>\n                <button\n                    style={{background: playerColours[choice.num]}}\n                    onClick={() => socket.emit('comeback', choice.num, props.code)}\n                >{choice.name}</button>\n            )}\n        </div>\n    );\n}\n\nexport default ComeBackMenu;","import React from 'react';\nimport { Typography, Divider, Tooltip, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport showDialog from '../Dialog/show';\nimport rules from '../Rules';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CodeIcon from '@material-ui/icons/Code';\nimport socket from '../socket';\n\nconst controllerHeight = '30vh';\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        height: 83,\n        //marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: '#50e662',\n        borderBottom: '1px solid #0000001f',\n        zIndex: 1005,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    buttons: {\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        opacity: 1,\n        width: 48,\n        zIndex: 5,\n    },\n\n    do: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    literallyCanvas: {\n        width: 600,\n        maxWidth: '100%',\n    },\n\n    image: {\n        width: 600,\n        maxWidth: '100%',\n        padding: '8px 0',\n    },\n\n    playingStatusContainer: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        '& > div': {\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 5,\n            padding: '4px 8px',\n            border: '1px solid #0000001f',\n            '& > span': {\n                fontSize: 24,\n                paddingLeft: 5,\n            },\n        }\n    },\n});\n\nfunction getImg(paper) {\n\treturn new Promise((res, rej) => {\n\t\tlet paperCanvas = paper.canvasForExport();\n\t\tlet canvas = document.createElement('canvas')\n        canvas.width = paperCanvas.width;\n        canvas.height = paperCanvas.height;\n\t\tlet ctx = canvas.getContext('2d');\n\t\tctx.fillStyle = '#ddd';\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tctx.fillStyle = document.getElementsByClassName('lc-drawing')[0].style['background-color'];\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t\tres(canvas.toDataURL('image/jpeg', 0.5));\n\t\t};\n\t\timg.src = paperCanvas.toDataURL();\n\t\t//ctx.putImageData(paperCanvas.getContext('2d').getImageData(0, 0, paperCanvas.width, paperCanvas.height), 0, 0);\n\t});\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    let [drawingNum, setDrawingNum] = React.useState(props.matchInfo.drawingNum);\n    let [playingStatus, setPlayingStatus] = React.useState(props.matchInfo.finished);\n    let [canvas, setCanvas] = React.useState(null);\n    let [drawInfo, setDrawInfo] = React.useState(props.matchInfo.theme);\n    let [submittable, setSubmittable] = React.useState(true);\n    let resetCanvas = () => setCanvas(LC.init(document.getElementById('drawingArea'), {imageURLPrefix: '/literallycanvas-0.4.13/img', backgroundColor: 'white', tools: [\n        LC.tools.Pencil,\n        LC.tools.Eraser,\n        LCFill,\n        LC.tools.Line,\n        LC.tools.Rectangle,\n        LC.tools.Ellipse,\n        LC.tools.Polygon,\n        LC.tools.Pan,\n        LC.tools.Eyedropper\n    ]}));\n\n    React.useEffect(() => {\n        resetCanvas();\n        socket.on('wait', newPlayingStatus => setPlayingStatus(newPlayingStatus));\n        socket.on('newDrawing', info => {\n            setDrawInfo(info);\n            setDrawingNum(drawingNum+1);\n            drawingNum++;\n            resetCanvas();\n            setSubmittable(false);\n            setTimeout(() => setSubmittable(true), 7500);\n        });\n\n        return () => {\n            socket.off('wait');\n            socket.off('newDrawing');\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <Tooltip title=\"How many players have finished drawing this turn\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Players done\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h3\">\n                                <span id=\"treasuresFound\">{playingStatus.length}</span>\n                            </Typography>\n                            <Typography variant=\"h5\">\n                                /<span id=\"treasuresNeeded\">{props.players.length}</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n\n                <Tooltip title=\"Turn number\">\n                    <div>\n                        <div className={classes.gameInfoTitle}>\n                            <Typography variant=\"subtitle1\">\n                                Drawing #\n                            </Typography>\n                        </div>\n                        <div className={classes.gameInfoContent}>\n                            <Typography variant=\"h4\">\n                                <span id=\"drawingNum\">{drawingNum+1}</span>\n                            </Typography>\n                            <Typography variant=\"h6\">\n                                /<span id=\"totalDrawings\">{props.players.length}</span>\n                            </Typography>\n                        </div>\n                    </div>\n                </Tooltip>\n            </div>\n\n            <div className={classes.buttons}>\n                <rules.ShowRulesButton />\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}><SettingsIcon /></IconButton>\n                <IconButton onClick={() => showDialog({\n                    title: \"Room Code\",\n                    description: \"Players can use this code to rejoin the match if they get disconnected:\",\n                }, <Typography variant=\"h2\">{props.matchInfo.code}</Typography>)}><CodeIcon /></IconButton>\n            </div>\n\n            <div className={classes.do} style={{display: playingStatus.includes(props.matchInfo.num) ? 'none' : 'flex'}}>\n                {Array.isArray(drawInfo)\n                ?\n                <Typography>Draw what happens inbetween these two pictures.</Typography>\n                :\n                <Typography>Draw the <b>{drawingNum == 0 ? 'beginning' : 'ending'}</b> of a story with the following theme: <b>{drawInfo}</b>.</Typography>}\n\n                {Array.isArray(drawInfo) ? <img src={drawInfo[0]} className={classes.image} /> : null}\n                <div id=\"drawingArea\" className={classes.literallyCanvas} />\n                {Array.isArray(drawInfo) ? <img src={drawInfo[1]} className={classes.image} /> : null}\n                \n                <Button size=\"large\" color={submittable ? 'primary' : 'default'} disabled={!submittable} style={{marginTop: 10}} onClick={async () => {setSubmittable(false);setTimeout(() => setSubmittable(true), 2500);socket.emit('submit', await getImg(canvas))}}>Submit</Button>\n                \n                <Divider style={{marginTop: 10, marginBottom: 10, width: '100%'}} />\n            </div>\n\n\n            <div className={classes.playingStatusContainer}>\n                {props.players.map(player => <div style={{background: playingStatus.includes(player.num) ? '#73ff7c' : '#ff6b61'}}>\n                    <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                    <span style={{textDecoration: `${player.dead ? 'line-through' : ''}${socket.id.startsWith(player.id) ? ' underline' : ''}`}}>{player.name}</span>\n                </div>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import GIF from \"gif.js\";\n\nconst width = 539;\nconst height = 369;\nconst delay = 2500;\nconst logoSize = 75;\n\nfunction themeFrame(theme) {\n    return new Promise(async res => {\n        let canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        let ctx = canvas.getContext('2d');\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'black';\n        ctx.font = '38px Arial';\n        ctx.fillText(`Theme: ${theme}`, width/2, height/2);\n\n        ctx.textBaseline = 'top';\n        ctx.font = '16px Arial';\n        ctx.fillText(window.location.host, width/2, height/2+50);\n        let logo = new Image();\n        logo.onload = () => {\n            ctx.drawImage(logo, (width/2)-(logoSize/2), (height/2)-(logoSize/2)-75, logoSize, logoSize);\n            res(ctx);\n        } \n        logo.onerror = () => res(ctx);\n        logo.src = '/iconSmall.png';\n    });\n}\n\nfunction drawingFrame(drawing, player) {\n    return new Promise(async res => {\n        let canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        let ctx = canvas.getContext('2d');\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, width, height);\n        \n        let drawingImg = new Image();\n        drawingImg.onload = () => {\n            let newWidth = height * (drawingImg.width / drawingImg.height)\n            ctx.drawImage(drawingImg, 0, 0, newWidth, height);\n\n            let pfp = new Image();\n\n            pfp.onload = () => {\n                //write name\n                ctx.fillStyle = 'black';\n                ctx.strokeStyle = 'white';\n                ctx.textBaseline = 'middle';\n                ctx.textAlign = 'left';\n                ctx.font = '30px Arial';\n                ctx.fillText(player.name, 5+50+5, 5+(50/2));\n                ctx.strokeText(player.name, 5+50+5, 5+(50/2));\n    \n                ctx.save();\n    \n                //border around pfp\n                ctx.beginPath();\n                ctx.arc(25+5, 25+5, 25+1, 0, Math.PI * 2, true);\n                ctx.closePath();\n                ctx.clip();\n                ctx.fillStyle = '#0000003b';\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n    \n                //draw pfp as circle\n                ctx.beginPath();\n                ctx.arc(25+5, 25+5, 25, 0, Math.PI * 2, true);\n                ctx.closePath();\n                ctx.clip();\n                ctx.drawImage(pfp, 5, 5, 50, 50);\n                ctx.restore();\n    \n                res(ctx);\n            };\n            pfp.onerror = () => res(ctx);\n            pfp.src = `/pfps/${player.num}.png`;\n        };\n        drawingImg.onerror = () => res(ctx);\n        drawingImg.src = drawing;\n    });\n}\n\nasync function createGif(plots, players) {\n    let frames = await Promise.all([].concat.apply([], plots.map(plot => [\n        themeFrame(plot.theme),\n        ...plot.drawings.map((drawing, index) => drawingFrame(drawing, players.find(p => p.num == plot.drawers[index])))\n    ])));\n\n    let gif = new GIF({\n        width,\n        height,\n    });\n    frames.forEach(frame => gif.addFrame(frame, {delay, copy: true}));\n\n    gif.on('finished', blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        a.download = `PlotTweening-${Date.now()}.gif`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n    });\n\n    gif.render();\n}\n\nexport default createGif;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport socket from '../socket/';\nimport playerColours from '../Match/playerColours.json';\nimport showDialog from '../Dialog/show';\nimport rules from '../Rules';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CodeIcon from '@material-ui/icons/Code';\nimport createGif from './gifCreator.js';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst wins = {\n    'treasure': [true, 'The pirates found all the treasure they needed!'],\n    'kill': [true, 'The pirates found and killed a sea monster!'],\n    'sink': [false, 'The ship sank.'],\n    'snitch': [false, 'The Sea Master found the biologist and snitched on them.'],\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n        '& > table': {\n            width: '95vw',\n            height: '85vh',\n            border: '1px solid #0000001f',\n            borderRadius: 10,\n            background: '#ffffff66',\n\n            '& > thead > td': {\n                textAlign: 'center',\n            },\n\n            '& > tbody > tr > td': {\n                background: '#ffffff66',\n                border: '1px solid #0000001f',\n                borderRadius: 8,\n                height: '70vh',\n                '& > div': {\n                    height: '100%',\n                    overflowY: 'auto',\n                }\n            },\n        }\n    },\n\n    players: {\n        width: 180,\n        maxWidth: 180,\n        '& > div': {\n            '& > div': {\n                width: '95%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: 5,\n                borderRadius: 8,\n                padding: '4px 8px',\n                '& > span': {\n                    display: 'flex',\n                    alignItems: 'center',\n                }\n            }\n        }\n    },\n\n    plot: {\n        overflowAnchor: 'none',\n\n        '& > .anchor': {\n            overflowAnchor: 'auto',\n            height: 1,\n        },\n    },\n\n    plotPoint: {\n        marginTop: 30,\n        '& > div': {\n            display: 'flex',\n            alignItems: 'center',\n            '& > img': {\n                marginRight: 8\n            },\n            '& > span': {\n                fontSize: 20,\n            },\n        },\n        '& > img': {\n            maxWidth: '100%',\n            maxHeight: '60vh',\n        },\n    },\n});\n\nfunction Presentation(props) {\n    const classes = useStyles();\n\n    let [presenting, setPresenting] = React.useState(props.matchInfo.presenting);\n    let [drawing, setDrawing] = React.useState(props.matchInfo.presentingImage);\n    let plotDiv = React.createRef();\n    \n    React.useEffect(() => {\n        (new Audio('/endMatch.mp3')).play();\n\n        socket.on('presentNewPlot', () => {\n            setPresenting(presenting+1);\n            presenting++;\n            setDrawing(0);\n            drawing = 0;\n        });\n        socket.on('presentNewDrawing', () => {\n            setDrawing(drawing+1);\n            drawing++;\n        });\n\n        return () => {\n            socket.off('presentNewPlot');\n            socket.off('presentNewDrawing');\n        };\n    }, []);\n\n    React.useEffect(() => {\n        plotDiv.current.scrollTop = plotDiv.current.scrollHeight;\n    }, [drawing]);\n    \n\n    return (\n        <div className={classes.root}>\n            <div style={{display: 'flex'}}>\n                <IconButton onClick={() => showMatchOptions.showMatchOptions({editable: false, started: true, ingame: true, options: props.matchInfo.options})}>\n                    <SettingsIcon />\n                </IconButton>\n                <IconButton href=\"/\">\n                    <HomeIcon />\n                </IconButton>\n                <IconButton onClick={() => showDialog({\n                    title: \"Room Code\",\n                    description: \"Players can use this code to rejoin the match if they get disconnected:\",\n                }, <Typography variant=\"h2\">{props.matchInfo.code}</Typography>)}><CodeIcon /></IconButton>\n                <rules.ShowRulesButton />\n            </div>\n\n            <table>\n                <thead>\n                    <td><Typography variant=\"h4\">Players</Typography></td>\n                    <td><Typography variant=\"h4\">{props.matchInfo.players.find(p => p.num == props.matchInfo.plots[presenting].owner).name}'s plot</Typography></td>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className={classes.players}><div>{props.matchInfo.plots.map((plot, index) => {\n                            let player = props.matchInfo.players.find(p => p.num == plot.owner);\n\n                            return (\n                                <div style={{background: index == presenting ? '#66f542': '#e3e3e3'}}>\n                                    <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                                    <span style={{textDecoration: props.matchInfo.num == player.num ? 'underline' : 'none'}}>\n                                        {player.name}\n                                        {props.matchInfo.host == player.num ? <Tooltip title=\"This player is the host. They control when images are shown.\"><StarsIcon /></Tooltip> : null}\n                                    </span>\n                                </div>\n                            );\n                        })}</div></td>\n\n\n                        <td><div className={classes.plot} ref={plotDiv}>\n                            <Typography>The theme was: <b>{props.matchInfo.plots[presenting].theme}</b></Typography>\n\n                            {props.matchInfo.plots[presenting].drawings.slice(0, drawing).map((drawing, index) => {\n                                let player = props.matchInfo.players.find(p => p.num == props.matchInfo.plots[presenting].drawers[index]);\n\n                                return (\n                                    <div className={classes.plotPoint}>\n                                        <div>\n                                            <img className=\"pfp\" src={`/pfps/${player.num}.png`} />\n                                            <span style={{textDecoration: props.matchInfo.num == player.num ? 'underline' : 'none'}}>{player.name}</span>\n                                        </div>\n                                        <img src={drawing} />\n                                    </div>\n                                );\n                            })}\n\n                            {drawing == props.matchInfo.plots[presenting].drawings.length ? (\n                                <div style={{textAlign: 'center'}}>\n                                    <Divider />\n                                    <Typography>End of plot</Typography>\n                                    <Button color=\"secondary\" onClick={() => createGif([props.matchInfo.plots[presenting]], props.matchInfo.players)}>Download as gif</Button>\n                                    {presenting == props.matchInfo.plots.length-1 ? [<br />,<Button color=\"secondary\" onClick={() => createGif(props.matchInfo.plots, props.matchInfo.players)}>Download all as one long gif</Button>] : null}\n                                </div>\n                            ) : null}\n\n                            {drawing == props.matchInfo.plots[presenting].drawings.length && presenting == props.matchInfo.plots.length-1 ? <Button color=\"primary\" size=\"large\" onClick={() => socket.emit('rejoin', props.rjCode, props.matchInfo.options)}>Play again</Button> : (\n                                props.matchInfo.amHost ? <Button color=\"primary\" onClick={() => socket.emit('presentNext')} size=\"large\">Next</Button> : null\n                            )}\n                        </div></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Presentation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport ComeBackMenu from '../Lobby/ComeBackMenu';\nimport * as gameplay from '../Match/gameplay';\nimport defaultMatchOptions from '../Home/defaultMatchOptions.json';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        layer: 'err',\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('noMatches', async () => {\n    let dialog = await showDialog({\n        title: 'No public matches available.',\n        description: 'Maybe create one yourself for people to join?',\n        buttonText: 'Create match with default options',\n        buttonAction: () => {\n            dialog.handleClose();\n            socket.emit('createMatch', {...defaultMatchOptions, public: true});\n        },\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        showDialog({\n            title: 'Disconnected.',\n            description: 'Lost connection to the Plot Tweening server. You might not be able to do anything. Sorry :/',\n        });\n        //window.location.reload();\n    }, 200);\n});\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n    showMatchOptions.changeOptions(matchInfo.options);\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('comebackchoice', (choices, code) => ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ComeBackMenu choices={choices} code={code} /></ThemeProvider>, document.getElementById('root')));\n\nsocket.on('waiting');\n\nsocket.on('present', (presentingInfo, rjCode) => gameplay.present(presentingInfo, rjCode));\nsocket.on('rejoin', code => window.location.href = `/?${code}`);\n\nexport default socket;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Presentation from '../Presentation';\n\nfunction playMatch(matchInfo, myId) {\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match matchInfo={matchInfo} players={matchInfo.players} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {        \n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction present(matchInfo, rjCode) {\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Presentation matchInfo={matchInfo} rjCode={rjCode} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n}\n\nexport {\n    playMatch,\n\n    present,\n};"],"sourceRoot":""}